# Generated by Django 5.0.4 on 2024-04-30 11:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Advert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=255)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('expire_date', models.DateField(blank=True, null=True)),
                ('target', models.TextField()),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'advert',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telegram_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('lang', models.CharField(blank=True, choices=[('uz', 'Uzbek'), ('en', 'English'), ('ru', 'Russian')], max_length=15, null=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('credit_sums', models.FloatField(default=600)),
                ('credit_seconds', models.FloatField(default=60)),
                ('used_sums', models.FloatField(default=0)),
                ('used_seconds', models.FloatField(default=0)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('username', models.CharField(blank=True, error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, null=True, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('login_type', models.CharField(blank=True, choices=[('google', 'Google'), ('telegram', 'Telegram')], max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='OrderPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('type', models.CharField(choices=[('click', 'Click'), ('payme', 'Payme'), ('telegram', 'Telegram')], max_length=20)),
                ('transaction_id', models.UUIDField(default=uuid.uuid4)),
                ('status', models.CharField(choices=[('created', 'Created'), ('paid', 'Paid'), ('cancel', 'Cancel')], default='created', max_length=20)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'orderpayment',
            },
        ),
        migrations.CreateModel(
            name='Speechtotext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=255)),
                ('lang', models.CharField(blank=True, choices=[('uz-UZ', 'Uzbek'), ('en-US', 'English'), ('ru-RU', 'Russian')], max_length=15, null=True)),
                ('youtube_link', models.URLField(blank=True, max_length=255, null=True)),
                ('input_file', models.FileField(blank=True, max_length=255, null=True, upload_to='')),
                ('result_docx', models.FileField(blank=True, max_length=255, null=True, upload_to='')),
                ('result_text', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'speechtotext',
            },
        ),
    ]
